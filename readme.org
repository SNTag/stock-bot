* Description

A Stock Bot to keep me updated on my investments.  I am a lazy investor; once I make an investment, I don't check up on it often.  But for the stocks that I am taking a gamble on, or to just get an idea of market health, I would like them to give the occasional message.  The system will pull data from Alpha Vantage, check for issues of interest, and send the information to an email as configured in a "bot-login.cnf".

I'm designing the program to run on a raspberry pi (ARM).

The system will not run automatically.  It is best to run using crontab or similar schedular with a frequency of your choice.  Again, I'm a lazy investor.  I'm running it once a day the end of the stock market.  It will keep me informed on minute details, or collect the data for further processing elsewhere.

*NOTE 1* Because of where the config file has to be placed currently, it will only work on linux for now. <br />
*NOTE 2* Only works with Alpha Vantage, I do not plan to configure it otherwise. <br />
*NOTE 3* Does not save status currently.  Everything will reset if script is stopped. <br />
*NOTE 4* User defined trigger conditions cannot be set without modifying the base script file for now. <br />

* To Use

** Prerequisites

*** setting up the fundamentals and your email

- Install the python modules listed in the requirements.txt.
- Add your config in __, named as 'bot-login.cnf', as described below:

#+BEGIN_SRC
[bot-email]
username=(YOUR RECIPIENT EMAIL ADDRESS HERE)
botName=(YOUR BOT EMAIL USERNAME HERE)
botPass=(YOUR BOT EMAIL PASSWORD HERE)
smtpAddress=(YOUR BOT EMAIL SMTP ADDRESS HERE)
smtpPort=(YOUR BOT EMAIL SMTP PORT HERE)
#+END_SRC

*** Setting up data collection

- Register for an [[https://www.alphavantage.co/][Alpha Vantage API key]]
- Add this key to somewhere in your 'bot-login.cnf' as such:

#+BEGIN_SRC
[AV]
apiKey=(YOUR Alpha Vantage API KEY HERE)

[Data]
stock-bot-daily-timeseries=/path/to/daily/timeseries/output/
stock-bot-graphs=/path/to/graph/output/
#+END_SRC

remember to add the backslash AT THE END of the path as well.

***  Add stocks of interest

Requires "./input/portfolio-summary.csv" in the following example format:

#+BEGIN_SRC
"var"
"AUY"
"MSFT"
"CVX"
#+END_SRC

"var" being ticker name.

** To Use

To run, modify crontab or similar program to run 'bot.py' at a frequency of your choice.  I will eventually add a setup file that will rapidly set up the software and crontab.

* Versions
** version history
*** 0.0.1
Writing up the bot email system
*** 0.0.2
Retrieving data from Alpha Vantage with a schedular for every x minutes
*** 0.0.3
Adding in support for config files (yaml) to enable easy modifications to stocks of interest
*** 0.0.4
Remodelling the config files to CSV (difficulties in using Dicts in a Banned stock list)
*** 0.0.5
Prevent stocks from re-triggering the email system by temporarily adding them to a 'banned stock list'
*** 0.0.6
Add in config files to protect confidential email details, Alpha Vantage API key.
*** 0.0.7
improving ability of the script to run by itself
*** 0.0.8
Switched fully to a json config file.  use crontab to run every day at 7PM instead (see setup)
*** 0.0.9
- Further config/path modifications.  Allows for improved data collection into customized outputs.
- Will collate today's and yesterday's stock data so that you can slowly amass a csv with a greater degree of daily-timeseries data (daily-timeseries from AV does NOT go all the way to the beginning of time)
- Will delete previous days CSV files to remove clutter
** TO-DO list
*** [C] Add option to analyze similar companies relative to the stock of Interest.
*** [A] check at specific time (instead of just every x hours), so as to minimize read/write to SD card and limit data inaccuracy.  NOTE: do this through crontab
*** [B] Add R graph processing instead of matplotlib
*** [B] Add on-the-fly updating of conditions of interest (PROBABLY REQUIRES MAJOR REORGANIZATION)
*** [C] Improve processing capabilities on current stock situations (such as through bta-lib)
*** [A] Add 'progress' saving (lists saved to text files for example)
*** [A] Improve internal data to hopefully limit wasted read/write (don't overwrite data, meta-data every time)
*** [C] Change how stocks are read (instead of CSV file)?
Could try using another json file for example.
*** [B] Add UTC to time variables (so that it can easily understand AV data regardless of laptop timezone)
*** [C] When saving data, add a way to just add to pre-existing csv file.
